10 INPUT "Enter text to encrypt: "; IN_TEXT$
20 INPUT "Enter shift value: "; SHIFT
30 GOSUB 120
40 PRINT OUT_TEXT$

50 INPUT "Enter text to decrypt: "; IN_TEXT$
60 INPUT "Enter shift value: "; SHIFT
70 GOSUB 210
80 PRINT OUT_TEXT$

90 INPUT "Enter text for brute-force solve: "; IN_TEXT$
100 GOSUB 300
110 END

120 REM ENCRYPTION SUBROUTINE
130 OUT_TEXT$ = ""
140 FOR I = 1 TO LEN(IN_TEXT$)
150     ASCII = ASC(MID(IN_TEXT$, I, 1))
160     IF ASCII >= 97 AND ASCII <= 122 THEN ASCII = ASCII - 32
170     IF ASCII >= 65 AND ASCII <= 90 THEN ASCII = (ASCII - 65 + SHIFT - (26 * INT((ASCII - 65 + SHIFT)/26))) + 65
180     OUT_TEXT$ = OUT_TEXT$ + CHR(ASCII)
190 NEXT I
200 RETURN

210 REM DECRYPTION SUBROUTINE
220 OUT_TEXT$ = ""
230 FOR I = 1 TO LEN(IN_TEXT$)
240     ASCII = ASC(MID(IN_TEXT$, I, 1))
250     IF ASCII >= 97 AND ASCII <= 122 THEN ASCII = ASCII - 32
260     IF ASCII >= 65 AND ASCII <= 90 THEN ASCII = (ASCII - 65 - SHIFT + 26 - (26 * INT((ASCII - 65 - SHIFT + 26)/26))) + 65
270     OUT_TEXT$ = OUT_TEXT$ + CHR(ASCII)
280 NEXT I
290 RETURN

300 REM BRUTE-FORCE SOLVING SUBROUTINE
310 PRINT "Solving the cipher with all 26 possible shifts:"
320 FOR S = 1 TO 26
330     OUT_TEXT$ = ""
340     FOR I = 1 TO LEN(IN_TEXT$)
350         ASCII = ASC(MID(IN_TEXT$, I, 1))
360         IF ASCII >= 97 AND ASCII <= 122 THEN ASCII = ASCII - 32
370         IF ASCII >= 65 AND ASCII <= 90 THEN ASCII = (ASCII - 65 - S + 26 - (26 * INT((ASCII - 65 - S + 26)/26))) + 65
380         OUT_TEXT$ = OUT_TEXT$ + CHR(ASCII)
390     NEXT I
400     PRINT S " " OUT_TEXT$
410 NEXT S
420 RETURN